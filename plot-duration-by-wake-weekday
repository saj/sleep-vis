#!/usr/bin/env python3

"""
plot-duration-by-wake-weekday calculates sleep duration distributions by wake
weekday, then plots the result as a boxplot.

Usage:

    parse-saa < sleep-export.csv | plot-duration-by-wake-weekday

"""

import fileinput
import sys

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

import _lib
from _lib.ldatetime import fmt_seconds_hhmm, weekday_idx, weekday_name
from _lib.levent import parse_events


def main(argv=None):
    args = _lib.parse_args(argv, {
        ("--figsize-height-inches",): {
            "default": _lib.MP_DEFAULT_FIGURE_HEIGHT_INCHES,
        }})

    data = _build_dataframe(fileinput.input(files=args.input))

    def _format_xtick(value, unused_pos):
        return weekday_name(int(value))

    def _format_ytick(value, unused_pos):
        return fmt_seconds_hhmm(value)

    plt.ioff()
    plt.switch_backend("Agg")
    sns.set_theme(palette="pastel")
    sns.set_style(rc={"ytick.left": True})
    fig, ax = plt.subplots(
        dpi=args.dpi,
        figsize=(args.figsize_width_inches, args.figsize_height_inches))
    ax = sns.boxplot(x="wake weekday", y="duration", data=data, ax=ax)
    ax.set_ylim(ymin=60*60*2, ymax=60*60*12)
    ax.yaxis.set_label_text("duration (hh:mm)")
    ax.xaxis.set_major_formatter(plt.FuncFormatter(_format_xtick))
    ax.yaxis.set_major_locator(plt.MultipleLocator(60*60*2))
    ax.yaxis.set_major_formatter(plt.FuncFormatter(_format_ytick))
    ax.yaxis.set_minor_locator(plt.MultipleLocator(60*60))
    fig.tight_layout()
    fig.savefig(args.output)


def _build_dataframe(file):
    return pd.DataFrame.from_records(list(_durations(file)))


def _durations(file):
    for event in parse_events(file):
        yield {"duration": event.period().duration_seconds,
               "wake weekday": weekday_idx(event.until)}


if __name__ == "__main__":
    sys.exit(main(sys.argv))
